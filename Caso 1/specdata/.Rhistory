plot(cars)
plot(mtcars)
plot(cars)
a <- runif(1:100)
b <- rnorm(1:100)
plot(a)
plot(b)
plot(a)
x <- list(a=1:5,b=rnorm(10000)) #b es un vector de 10000 elementos aleatorios
runif(20)
runif(1:20)
runif(20, min = 0, max = 1)
rnorm(20, 5)
runif(20, min = 0, max = 10)
plot(runif(20, min = 0, max = 10))
plot(rnorm(20, 5))
plot(runif(100, min = 0, max = 10))
plot(rnorm(100, 5))
plot(rnorm(1000, 5))
plot(runif(1000, min = 0, max = 10))
plot(rnorm(1000, 5))
lapply(x, mean)
x <- list(a = 1:5, b =rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x, mean)
x <- list(a = 1:5, b =rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x, mean)
x <- list(a = 1:5, b =rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x, mean)
x <- list(a = 1:5, b =rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x, mean)
x <- list(a = 1:5, b =rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x, mean)
x <- 1:4
lapply(x, runif)
x
a
x <- 1:4
lapply(x, runif, max = 15, min = 5)
x <- list(a = 1:5, b =rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- matrix(rnorm(200),20,10)
apply(x,2, mean)
apply(x,1, mean)
x
str(apply) #str da información sobre la función
apply(x,1,quantile, probs = c(0.25,0.75))
?quantile
quantile(1:20)
quantile(1:10)
quantile(1:10, probs = c(0.25,0.75))
quantile(0:10, probs = c(0.25,0.75))
a <- array(rnorm(2*2*10),c(2,2,10))
a
apply(a,c(1,2),mean) #3 dimensiones, 1=trabaja sobre margen uno y margen 2=2
rowMeans(a,dims = 2)
?rowMeans
a[c(1,2)]
a
a[c(1,2,3)]
head(a)
a
a[c(1,2,7,15)]
a
#mapply
#Es como si fuera una apply multi... ¿?
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep, 1:4, 4:1) #mapply hace lo mismo que list con rep (repetición)
a <- mtcars
a
a <- mtcars[(1,1):(10,11)]
a <- mtcars[c(1:10,1:11)]
a
a <- mtcars[3,]
a
a <- mtcars[1:10,]
a
b <- mtcars[11:20,]
b
airquality
a <- mtcars[1:11,]
a
b <- mtcars[12:28,]
b
c <- mtcars[29:35,]
c
a <- mtcars[1:11,]
a
b <- mtcars[12:28,]
b
c <- mtcars[29:32,]
c
RowMeans(a)
RowMeans(a,1)
?rowMeans
a
a[hp]
a["hp"]
mean(a["hp"])
summary(a["hp"])
attributes(a["hp"])
mean(1:9)
sapply(a["hp"],mean)
sapply(b["hp"],mean)
sapply(a["hp"],b["hp"],mean)
apply(a["hp"],mean)
apply(a,"hp",mean)
apply(a, 2 ,mean)
a
apply(a, 1 ,mean)
apply(a, 2 ,mean)
apply(a, 2 ,mean)["hp"]
sapply(a["hp"],mean)
x <- list(a,b)
sapply(x, mean)
sapply(x$hp, mean)
View(x)
a <- a["hp"]
b <- b["hp"]
x <- list(a,b)
sapply(x$hp, mean)
a <- a["hp"]
b <- b["hp"]
x <- list(a,b)
sapply(x$hp, mean)
sapply(x, mean)
a <- !is.na(a["hp"])
b <- !is.na([b["hp"])
b <- !is.na(b["hp"])
x <- list(a,b)
sapply(x, mean)
x <- factor(a,b)
x <- factor(a)
x
sapply(a["hp"],mean)
sapply(a["hp"],mean)
a <- mtcars[1:11,]
a
b <- mtcars[12:28,]
b
c <- mtcars[29:32,]
c
sapply(a["hp"],mean)
apply(a, 2 ,mean)["hp"]
x <- list(c(sapply(a["hp"],mean),sapply(b["hp"],mean)))
x
x <- data.frame(sapply(a["hp"],mean),sapply(b["hp"],mean)))
x
x <- data.frame(sapply(a["hp"],mean),sapply(b["hp"],mean))
x
x <- data.frame(a = sapply(a["hp"],mean), b = sapply(b["hp"],mean))
x
a <- sapply(a["hp"],mean)
b <- sapply(b["hp"],mean)
x <- cbind(a,b)
x
c
a <- sapply(a["hp"],mean)
b <- sapply(b["gear"],mean)
x <- cbind(a,b)
x
b
b["gear"]
b <- mtcars[12:28,]
b["gear"]
b <- sapply(b["gear"],mean)
b
a <- sapply(a["hp"],mean)
b <- sapply(b["gear"],mean)
b
a
x <- cbind(a,b)
x
a <- sapply(a["hp"],mean)
b <- sapply(b["hp"],mean)
a <- mtcars[1:11,]
b <- mtcars[12:28,]
a <- sapply(a["hp"],mean)
b <- sapply(b["hp"],mean)
x <- rbind(a,b)
x
setwd("C:/Users/Brando Alberto/Documents/GitHub/Caso 1")
directorio <- "C:/Users/Brando Alberto/Documents/GitHub/Caso 1/specdata"
contaminante <- "sulfate"
dget("specdata")
dget("001.csv")
setwd(directorio)
dget("001.csv")
a <- dget("001.csv")
a
a <- dget("001.csv")
a <- dget("002.csv")
?dget
a <- dget("2","specdata")
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
a <- dget("002")
list.files()
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
a <- dget("001.csv")
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
a <- dget("001.csv","031.csv")
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
a <- dget("001.csv")
a
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
a <- dget("001.csv")
a <- dget("001.csv")
a
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
read.csv("001.csv")
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
read.csv("101.csv")
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
read.csv("175.csv")
directorio <- "C:/Users/Brando Alberto/Documents/GitHub/Caso 1"
setwd(directorio)
directorio <- "C:/Users/Brando Alberto/Documents/GitHub/Caso 1/specdata"
setwd(directorio)
read.csv("175.csv")
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
read.csv("179.csv")
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
read.csv("002.csv")
contaminante <- "sulfate"
read.csv("002.csv")[contaminante]
## 'id' es un vector de enteros que indica los ID's de los monitores
## a usar.
## Regresa la media del contaminante que se solicita a lo largo de
## los monitores mencionados en el vector. (ignorando los NA's)
read.csv("002.csv")
a <- read.csv("002.csv")[contaminante]
a
head(a)
tail(a)
length(a)
length(a)
a <- read.csv("002.csv")
length(a)
id = 1:332
length(id)
id = 1:1
length(id)
id = 1:2
length(id)
id
read.csv(list.files()[2])
head(read.csv(list.files()[2]))
id + 1
id + 3
id = 1:10
id + 1
a <- sapply(read.csv(list.files()[1])[contaminante], mean)
a
read.csv(list.files()[1])[contaminante]
is.na(read.csv(list.files()[1])[contaminante])
a <- is.na(read.csv(list.files()[1])[contaminante])
a
a <- read.csv(list.files()[1])[contaminante][!is.na(read.csv(list.files()[1])[contaminante])]
a
a <- read.csv(list.files()[1])[contaminante][!is.na(read.csv(list.files()[1])
[contaminante])]
a
a <- read.csv(list.files()[1])[contaminante]
a <- a[!is.na(read.csv(list.files()[1])[contaminante])]
a
media <- sapply(a, mean)
media
media <- sapply(a, mean)
media
sapply(read.csv(list.files()[1])[contaminante][!is.na(read.csv(list.files()[1])[contaminante])],mean)
sapply(as.matrix(read.csv(list.files()[1])[contaminante][!is.na(read.csv(list.files()[1])[contaminante])])
sapply(as.matrix(read.csv(list.files()[1])[contaminante][!is.na(read.csv(list.files()[1])[contaminante])]),mean)
sapply(as.matrix(read.csv(list.files()[1])[contaminante][!is.na(read.csv(list.files()[1])[contaminante])]),mean)
a <- read.csv(list.files()[1])[contaminante]
a
head(a)
a <- a[!is.na(a)]
head(a)
a
a <- as.vector(a[!is.na(a)])
head(a)
a <- as.data.frame(a[!is.na(a)])
head(a)
media <- sapply(a, mean)
media
a <- as.data.frame(A1 = a[!is.na(a)])
head(a)
a <- as.data.frame("A1" = a[!is.na(a)])
head(a)
a <- as.data.frame("A1" = a[!is.na(a)])
head(a)
a <- read.csv(list.files()[1])[contaminante]
a
a <- as.data.frame(a[!is.na(a)])
a <- a[!is.na(a)]
head(a)
a
a <- mean(a)
media <- data.frame(A = a)
media
a
media
c <- read.csv(list.files()[1])[contaminante]
mc <- mean(c[!is.na(c)])
mt <- data.frame(A = mc)
mt
id[2]
id[2:10]
length(id)
length(id) - 1
for (i in 1:lenght(id) - 1){
print("Hola",i)
}
for (i in 1:length(id) - 1){
print("Hola",i)
}
for (i in 1:length(id) - 1){
print("Hola", i)
}
for (i in 1:length(id) - 1){
i
print("Hola", i)
}
for (i in 1:length(id) - 1){
print(i)
print("Hola", i)
}
for (i in 1:length(id) - 1){
print(i)
paste("Hola", i)
}
for (i in 1:length(id) - 1){
print(i)
paste("Hola", i, sep = " ")
}
for (i in 1:length(id) - 1){
print(i)
print(paste("Hola", i, sep = " "))
}
for (i in 2:length(id)){
print(i)
print(paste("Hola", i, sep = " "))
}
for (i in 2:1){
print(i)
}
id = 1:1
length(id)
if(length(id) = 1){
print(id)
}
if(length(id) == 1){
print(id)
}
media
c <- read.csv(list.files()[1])[contaminante] #contaminante en monitor i
mc <- mean(c[!is.na(c)]) #media del contaminante en monitor i
media <- data.frame(1 = mc)
media <- data.frame( list.files()[1] = mc) #media de n monitores
media <- data.frame("A" = mc) #media de n monitores
media
list.files()[1]
name <- paste("M", substr(list.files()[1],start = 1,stop = 3))
name
directorio <- "C:/Users/Brando Alberto/Documents/GitHub/Caso 1/specdata"
contaminante <- "sulfate"
id = 1:1
setwd(directorio)
name <- paste("M", substr(list.files()[1],start = 1,stop = 3))
c <- read.csv(list.files()[1])[contaminante] #contaminante en monitor i
mc <- mean(c[!is.na(c)]) #media del contaminante en monitor i
mid <- data.frame(name = mc) #media de n monitores
if(length(id) > 1){
}else{
mid
}
mid <- data.frame(paste("M", substr(list.files()[1],start = 1,stop = 3)) = mc) #media de n monitores
nae
name
?data.frame
name <- paste("M", substr(list.files()[1],start = 1,stop = 3))
c <- read.csv(list.files()[1])[contaminante] #contaminante en monitor i
mc <- as.matrix(mean(c[!is.na(c)])) #media del contaminante en monitor i
rownames(mc) <- contaminante
mc
?colnames
colnames(x[ ,1]) <- name
mc
colnames(mc[ ,1]) <- name
mc
colnames(mc[1]) <- name
mc
colnames(mc)[1] <- name
mc
x <- "C:/Users/Brando Alberto/Documents/GitHub/Caso 1/specdata"
y <- "sulfate"
z = 1:1
mediacontaminante <- function(directorio, contaminante, id){
setwd(directorio)
name <- paste("M", substr(list.files()[1],start = 1,stop = 3))
c <- read.csv(list.files()[1])[contaminante] #contaminante en monitor i(1)
mc <- as.matrix(mean(c[!is.na(c)])) #media del contaminante en monitor i(1)
rownames(mc) <- contaminante
colnames(mc)[1] <- name
if(length(id) > 1){
for (i in 2:length(id)){
name <- paste("M", substr(list.files()[i],start = 1,stop = 3))
c <- read.csv(list.files()[i])[contaminante]
mc2 <- as.matrix(mean(c[!is.na(c)]))
colnames(mc2) <- contaminante
rownames(mc2)[1] <- name
mc <- rbind(mc, mc2) #media de n monitores
}
mc
}else{
mc
}
}
mediacontaminante(x,y,z)
mediacontaminante(x,y,z)
z = 1:1
mediacontaminante(x,y,z)
mediacontaminante <- function(directorio, contaminante, id){
setwd(directorio)
name <- paste("M", substr(list.files()[1],start = 1,stop = 3))
c <- read.csv(list.files()[1])[contaminante] #contaminante en monitor i(1)
mc <- as.matrix(mean(c[!is.na(c)])) #media del contaminante en monitor i(1)
colnames(mc) <- contaminante
rownames(mc)[1] <- name
if(length(id) > 1){
for (i in 2:length(id)){
name <- paste("M", substr(list.files()[i],start = 1,stop = 3))
c <- read.csv(list.files()[i])[contaminante]
mc2 <- as.matrix(mean(c[!is.na(c)]))
colnames(mc2) <- contaminante
rownames(mc2)[1] <- name
mc <- rbind(mc, mc2) #media de n monitores
}
mc
}else{
mc
}
}
z = 1:1
mediacontaminante(x,y,z)
z = 1:2
mediacontaminante(x,y,z)
z = 1:10
mediacontaminante(x,y,z)
z = 1:1
z = 1:1
mediacontaminante(x,y,z)
#media contaminante
mediacontaminante <- function(directorio, contaminante, id){
setwd(directorio)
name <- paste("M", substr(list.files()[1],start = 1,stop = 3))
c <- read.csv(list.files()[1])[contaminante] #contaminante en monitor i(1)
mc <- as.matrix(mean(c[!is.na(c)])) #media del contaminante en monitor i(1)
colnames(mc) <- contaminante
rownames(mc)[1] <- name
if(length(id) > 1){
for (i in 2:length(id)){
name <- paste("M", substr(list.files()[i],start = 1,stop = 3))
c <- read.csv(list.files()[i])[contaminante]
mc2 <- as.matrix(mean(c[!is.na(c)]))
colnames(mc2) <- contaminante
rownames(mc2)[1] <- name
mc <- rbind(mc, mc2) #media de n monitores
}
mc
}else{
mc
}
}
x <- "C:/Users/Brando Alberto/Documents/GitHub/Caso 1/specdata"
y <- "sulfate"
z = 1:1 #332
mediacontaminante(x,y,z)
mediacontaminante(x,y,z)
z = 1:332 #332
mediacontaminante(x,y,z)
