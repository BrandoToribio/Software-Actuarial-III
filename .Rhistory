?rnorm
help.search("rnorm")
args("rnorm")
view(a)
library("boot", lib.loc="C:/Program Files/R/R-3.4.3/library")
detach("package:boot", unload=TRUE)
library("boot", lib.loc="C:/Program Files/R/R-3.4.3/library")
detach("package:boot", unload=TRUE)
library("boot", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("class", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("cluster", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("codetools", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("compiler", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("foreign", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("graphics", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("grDevices", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("grid", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("MASS", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("Matrix", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("methods", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("mgcv", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("nlme", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("parallel", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("nnet", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("rpart", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("spatial", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("splines", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("stats", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("stats4", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("tcltk", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("survival", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("tools", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("translations", lib.loc="C:/Program Files/R/R-3.4.3/library")
library("utils", lib.loc="C:/Program Files/R/R-3.4.3/library")
install.packages("rmarkdown")
install.packages("rmarkdown")
x<-1
x<-1
x<-1
x<-1
x<-2
x<-2
print(x)
print(x)
x<-1
x<-2 'Asignación de valor'
print(x) 'Impresión de valor'
x<-1
x<-2 #Asignación de valor
print(x) #Impresión de valor
resión de valor
msg <- "Hola"
print(msg)
x <- #Expresión incompleta
x <- #Para salir, presionar Esc
x <- #Expresión incompleta, en la consola aparecerá "+"
x <- #Para salir de su ejecución ("+"), presionar Esc en la consola
#Impresión de un arreglo
x <- 1:20
x <- 1:20
x
y <- 3:9
y
z <- 99:43
z
x <- 3:14.5
x
x <- 1:20
x
y <- 3:9
y
z <- 99:43
z
#El operador ":" me permite generar secuenciaas númericas de k a n
w <- 3:14.5
w #Se aplica la función piso
x <- 1:20
x
y <- 3:9
y
z <- 99:43
z
#El operador ":" me permite generar secuenciaas númericas de k a n
w <- 3:14.7
w #Se aplica la función piso
x
z
exp(-inf)
exp(-Inf)
1/0
attributes(z)
y <- c(TRUE,FALSE,TRUE, TRUE, F, F, T)
x <- c(1L,3L, 5L, -4L) #Integer
x <- c(1L,3L, 5L, -4L, 2L, 4L) #Integer
x <- c(1.3, 5, -4) #numeric
x <- c(1+1i, 3-4i,-5-6i,3.14-1.618i) #Complex
x <- c("a","b","hola","mundo") #character
x <- vector("numeric",length = 10)
y <- c(1.7,"a")
y <- c(TRUE, 2)
y <- c(TRUE, 2L) #se convierte en entero
y <- c(TRUE, 2L, 2) #numeric
y <- c(FALSE, 2L, 5, 5-4i) #complext
as.character(x)
install.packages("rmarkdown")
install.packages("ggplot2")
install.packages("devtools")
a <- installed.packages()
View (a)
x <- list(1, "a", TRUE, 3 + 2i, 5L)
x
x <- list(1, "a", TRUE, 3 + 2i, 5L, 1:50)
x
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = FALSE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
mdat <- matrix(c(1,2,3,11,12,13), nrow = 2, ncol = 3, byrow = FALSE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
mdat <- matrix(c(1,2,3,11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
m <- matrix(nrow = 2, ncol = 2)
m
dim(mdat)
dim(m)
attributes(m)
m <- matrix(nrow = 2, ncol = 3)
attributes(m)
m <- matrix(1:6,2,3)
m
m <- matrix(NA,2,3)
m
m <- matrix(data=1:8, nrow = 2, ncol = 3)
m <- matrix(data=1:9, nrow = 2, ncol = 3)
m <- matrix(1:6,2,3,T)
m
m <- 1:10
m
dim(m) <- c(2,5)
m
m <- matrix(1:6,2,3,T)
m
dim(m)
m <- 1:10
m
dim(m) <- c(2,5)
m
x <-1:3
y <-10:12
cbind(x,y)
rbind(x,y)
x <- factor(c("Si","Si","No","No","Si"))
x
x <- factor(c("Azul","Verde","Verde","Azul","Rojo"))
x
x <- factor(c("azul","Verde","Verde","Azul","Rojo"))
x
table(x)
x <- factor(c("Azul","Verde","Verde","Azul","Rojo"))
x
table(x)
unclass(x)
x <- factor(c("Azul","Verde","Verde","Azul","Rojo"),
levels = c("Rojo","Amarillo","Verde","Naranja"))
x
x <- factor(c("Azul","Verde","Verde","Azul","Rojo"),
levels = c("Rojo","Amarillo","Verde","Azul"))
x
x <- factor(c("Azul","Verde","Verde","Azul","Rojo"),
levels = c("Rojo","Amarillo","Verde","Azul"))
x
unclass(x)
x <- c(1,2,NA,10,3)
is.na(x)
is.nan(x)
x <- c(1,2,NA,10,3)
is.na(x) #valor faltante detectado
is.nan(x) #valor no numérico que no es faltante
y <- c(1,2,NaN,10,3)
is.na(y)
is.nan(y)
x <- data.frame(foo = 1:4, bar = c(T,T,F,F))
x
nrow(x)
ncol(x)
x <- 1:3
names(x)
names(x) <- c("foo","bar","norf")
x
names(x)
x <- list(a=1,b=2,c=3)
m <- matrix(1:4, nrow =2,ncol=2)
dimnames(m) <- list(c("a","b"),c("c","d"))
m
Prueba
mtcars
z
x <- "Software Actuarial III"
y <- data.frame(a=1,b="a")
dump(c("x","y"),file="data.R")
setwd("~/Github/Software-Actuarial-III")
x <- "Software Actuarial III"
y <- data.frame(a=1,b="a")
dump(c("x","y"),file="data.R")
rm(x,y)
x
y
x <- "Software Actuarial III"
y <- data.frame(a=1,b="a")
x
y
source("data.R")
con <- url("https://www.fcfm.buap.mx/")
x <- readLines(con)
x[7] <- "\t<title> Estaríamos mejor con otro rector</title>"
writeLines(x,"FCFM.html")
x <- c("a","b","c","d","e")
x
x[1]
x[2]
x[1:4]
x[x>"b"]
u <- x == "c"
u
x[u]
x <- list(foo=1:4,bar=0.6)
x
x[1]
x[[1]]
x$foo
#El resultado fue un vector como con [[]]
x["bar"]
x[["bar"]]
x[c(1,3)]
x <- list(foo=1:4,bar=0.6, baz = "Hola")
x[c(1,3)]
#Extrae elementos no secuenciales 1 si, 2 no, 3 si
x[[c(1,3)]]
name <- "baz"
x[name]
x[[name]]
x$name
x <- matrix(1:6,2,3)
x
x[1,2]
x[2,1]
x[1,]
x[,2]
x[1,2, drop = FALSE]
x[1, drop = FALSE]
x[1, , drop = FALSE]
x[1:2,2, drop = FALSE]
x <- list(aardvark = 1:5)
x$a
x[["a"]]
x[["a", exact=FALSE]]
mtcars
mtcars$mpg/mtcars$cyl
a<- mtcars$mpg/mtcars$cyl
a[15]
